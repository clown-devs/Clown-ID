{
    "swagger": "2.0",
    "info": {
        "description": "Auth service for clown-devs projects",
        "title": "Clown-ID API",
        "contact": {},
        "version": "0.1"
    },
    "paths": {
        "/hello": {
            "get": {
                "description": "Возвращает json \"hello world\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Тестовый эндпоинт для проверки работы автодокументации",
                "operationId": "hello",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login/": {
            "get": {
                "description": "Возвращает пару токенов - access и refresh токен или json с ошибкой",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Аутентификация пользователя по логину и паролю",
                "operationId": "auth-login",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/register/": {
            "post": {
                "description": "Принимает json с пользователем.\nВозвращает либо созданного пользователя либо json с ошибкой.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация пользователя.",
                "operationId": "auth-register",
                "parameters": [
                    {
                        "description": "json пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/examples.CreateUserExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/examples.PublicUserExample"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HttpErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "examples.CreateUserExample": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "aboba@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "password": {
                    "type": "string",
                    "example": "aboba32"
                },
                "username": {
                    "type": "string",
                    "example": "aboba"
                }
            }
        },
        "examples.PublicUserExample": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "aboba@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "username": {
                    "type": "string",
                    "example": "aboba"
                }
            }
        },
        "handlers.HttpErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "something went wrong..."
                }
            }
        }
    }
}