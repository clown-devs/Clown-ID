{
    "swagger": "2.0",
    "info": {
        "description": "Auth service for clown-devs projects",
        "title": "Clown-ID API",
        "contact": {},
        "version": "0.1"
    },
    "paths": {
        "/login/": {
            "post": {
                "description": "Необходим либо логин, либо email.\nВ случае, если предоставлены оба поля приоритет будет у логина.\nВозвращает пару токенов - access и refresh токен или json с ошибкой",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Аутентификация пользователя по логину или email и паролю",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "json запроса:",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.HandleLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HandleLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HttpErrorResponse"
                        }
                    }
                }
            }
        },
        "/register/": {
            "post": {
                "description": "Принимает json с пользователем.\nВозвращает либо созданного пользователя либо json с ошибкой.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация пользователя.",
                "operationId": "auth-register",
                "parameters": [
                    {
                        "description": "json пользователя:",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.HandleRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HttpErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HandleLoginRequest": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string",
                    "example": "1"
                },
                "client_id": {
                    "type": "string",
                    "example": "1"
                },
                "email": {
                    "description": "either email or username should not be empty",
                    "type": "string",
                    "example": "aboba@gmail.ru"
                },
                "password": {
                    "type": "string",
                    "example": "qwerty123456"
                },
                "username": {
                    "type": "string",
                    "example": "aboba"
                }
            }
        },
        "handlers.HandleLoginResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "$ref": "#/definitions/models.RefreshToken"
                }
            }
        },
        "handlers.HandleRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "aboba@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "aboba32"
                },
                "username": {
                    "type": "string",
                    "example": "aboba"
                }
            }
        },
        "handlers.HttpErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "something went wrong..."
                }
            }
        },
        "models.RefreshToken": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string",
                    "example": "1"
                },
                "client_id": {
                    "type": "string",
                    "example": "1"
                },
                "expires_at": {
                    "description": "unixtime",
                    "type": "integer",
                    "example": 1691407740
                },
                "token": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "user_id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "aboba@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "107"
                },
                "username": {
                    "type": "string",
                    "example": "aboba"
                }
            }
        }
    }
}